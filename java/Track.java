
        package se.kth.clickr;
        import java.util.List;
        /*
        * This class was automatically generated by Floodway.
        */
        class Track{
            
public static class File{private String fieldname;private String originalname;private String encoding;private String mimetype;private String destination;private String filename;private String path;private long size;public void setFieldname(String fieldname){this.fieldname = fieldname; }public String getFieldname(){ return this.fieldname; }public void setOriginalname(String originalname){this.originalname = originalname; }public String getOriginalname(){ return this.originalname; }public void setEncoding(String encoding){this.encoding = encoding; }public String getEncoding(){ return this.encoding; }public void setMimetype(String mimetype){this.mimetype = mimetype; }public String getMimetype(){ return this.mimetype; }public void setDestination(String destination){this.destination = destination; }public String getDestination(){ return this.destination; }public void setFilename(String filename){this.filename = filename; }public String getFilename(){ return this.filename; }public void setPath(String path){this.path = path; }public String getPath(){ return this.path; }public void setSize(long size){this.size = size; }public long getSize(){ return this.size; }}
public static class Create{private String userId;private String title;private String description;private File file;public void setUserId(String userId){this.userId = userId; }public String getUserId(){ return this.userId; }public void setTitle(String title){this.title = title; }public String getTitle(){ return this.title; }public void setDescription(String description){this.description = description; }public String getDescription(){ return this.description; }public void setFile(File file){this.file = file; }public File getFile(){ return this.file; }}
public static class UploadResult{private String newId;public void setNewId(String newId){this.newId = newId; }public String getNewId(){ return this.newId; }}
public static class StreamSingleParams{private String id;public void setId(String id){this.id = id; }public String getId(){ return this.id; }}
public static class Button{private String key;private String label;private long enable;private long disable;private boolean skipOnClick;public void setKey(String key){this.key = key; }public String getKey(){ return this.key; }public void setLabel(String label){this.label = label; }public String getLabel(){ return this.label; }public void setEnable(long enable){this.enable = enable; }public long getEnable(){ return this.enable; }public void setDisable(long disable){this.disable = disable; }public long getDisable(){ return this.disable; }public void setSkipOnClick(boolean skipOnClick){this.skipOnClick = skipOnClick; }public boolean getSkipOnClick(){ return this.skipOnClick; }}
public static class Track{private String id;private String title;private String description;private List<String> sharedWith;private String ownerId;private long created;private List<Button> buttons;public void setId(String id){this.id = id; }public String getId(){ return this.id; }public void setTitle(String title){this.title = title; }public String getTitle(){ return this.title; }public void setDescription(String description){this.description = description; }public String getDescription(){ return this.description; }public void setSharedWith(List<String> sharedWith){this.sharedWith = sharedWith; }public List<String> getSharedWith(){ return this.sharedWith; }public void setOwnerId(String ownerId){this.ownerId = ownerId; }public String getOwnerId(){ return this.ownerId; }public void setCreated(long created){this.created = created; }public long getCreated(){ return this.created; }public void setButtons(List<Button> buttons){this.buttons = buttons; }public List<Button> getButtons(){ return this.buttons; }}
public static class StreamResult{private String type;private String id;private Track value;public void setType(String type){this.type = type; }public String getType(){ return this.type; }public void setId(String id){this.id = id; }public String getId(){ return this.id; }public void setValue(Track value){this.value = value; }public Track getValue(){ return this.value; }}
public static class IdContainer{private String id;public void setId(String id){this.id = id; }public String getId(){ return this.id; }}
public static class Db{private String id;private String title;private String description;private List<String> sharedWith;private String ownerId;private String filePath;private long created;private List<Button> buttons;public void setId(String id){this.id = id; }public String getId(){ return this.id; }public void setTitle(String title){this.title = title; }public String getTitle(){ return this.title; }public void setDescription(String description){this.description = description; }public String getDescription(){ return this.description; }public void setSharedWith(List<String> sharedWith){this.sharedWith = sharedWith; }public List<String> getSharedWith(){ return this.sharedWith; }public void setOwnerId(String ownerId){this.ownerId = ownerId; }public String getOwnerId(){ return this.ownerId; }public void setFilePath(String filePath){this.filePath = filePath; }public String getFilePath(){ return this.filePath; }public void setCreated(long created){this.created = created; }public long getCreated(){ return this.created; }public void setButtons(List<Button> buttons){this.buttons = buttons; }public List<Button> getButtons(){ return this.buttons; }}
public static class GetFileParams{private Db track;public void setTrack(Db track){this.track = track; }public Db getTrack(){ return this.track; }}
public static class FilePath{private String path;public void setPath(String path){this.path = path; }public String getPath(){ return this.path; }}
public static class NoParams{}
            
            
            public abstract static class CreateCallback{
                abstract void result(UploadResult result);
                abstract void err(String errorCode,String description);
            }
            
            public static Request create(Create params,final CreateCallback callback){
                return new Request("track","create",params,new Request.RequestCallback(UploadResult.class){
                    @Override
                    public void res(Object result){
                        callback.result((UploadResult) result);
                    }
                    @Override
                    public void err(String ec,String desc){
                        callback.err(ec,desc);
                    }
                });
            }
        
            
            public abstract static class StreamSingleCallback{
                abstract void result(StreamResult result);
                abstract void err(String errorCode,String description);
            }
            
            public static Request streamSingle(StreamSingleParams params,final StreamSingleCallback callback){
                return new Request("track","streamSingle",params,new Request.RequestCallback(StreamResult.class){
                    @Override
                    public void res(Object result){
                        callback.result((StreamResult) result);
                    }
                    @Override
                    public void err(String ec,String desc){
                        callback.err(ec,desc);
                    }
                });
            }
        
            
            public abstract static class GetCallback{
                abstract void result(Track result);
                abstract void err(String errorCode,String description);
            }
            
            public static Request get(IdContainer params,final GetCallback callback){
                return new Request("track","get",params,new Request.RequestCallback(Track.class){
                    @Override
                    public void res(Object result){
                        callback.result((Track) result);
                    }
                    @Override
                    public void err(String ec,String desc){
                        callback.err(ec,desc);
                    }
                });
            }
        
            
            public abstract static class FileCallback{
                abstract void result(FilePath result);
                abstract void err(String errorCode,String description);
            }
            
            public static Request file(GetFileParams params,final FileCallback callback){
                return new Request("track","file",params,new Request.RequestCallback(FilePath.class){
                    @Override
                    public void res(Object result){
                        callback.result((FilePath) result);
                    }
                    @Override
                    public void err(String ec,String desc){
                        callback.err(ec,desc);
                    }
                });
            }
        
            
            public abstract static class StreamAllCallback{
                abstract void result(StreamResult result);
                abstract void err(String errorCode,String description);
            }
            
            public static Request streamAll(NoParams params,final StreamAllCallback callback){
                return new Request("track","streamAll",params,new Request.RequestCallback(StreamResult.class){
                    @Override
                    public void res(Object result){
                        callback.result((StreamResult) result);
                    }
                    @Override
                    public void err(String ec,String desc){
                        callback.err(ec,desc);
                    }
                });
            }
        
        }
    